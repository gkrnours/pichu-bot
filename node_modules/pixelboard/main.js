var cache   = require('memory-cache')
var http    = require('http')
var path    = require('path')
var uuid    = require('node-uuid')
var fs      = require('fs')

var io = null
var tick = 0
var todo = {}
var board = []
for(i=0;i<32;++i){ board.push([]) }

function K(i){ return i }

fs.readFile(path.resolve(__dirname, "index.html"), function(err, data){
	if(err) throw(err)
	cache.put('html', data)
})
fs.readFile(path.resolve(__dirname, "board.js"),  function(err, data){ 
	if(err) throw(err)
	cache.put('js', data)
})
fs.readFile(path.resolve(__dirname, "socket.io.js"),  function(err, data){
	if(err) throw(err)
	cache.put('socket', data)
})
fs.readFile(path.resolve(__dirname, "style.css"), function(err, data){
	if(err) throw(err)
	cache.put('css', data)
})
var local = (typeof process.env.OPENSHIFT_INTERNAL_PORT != "undefined")


setInterval(function(){
	td = []
	for(k in todo){ 
		v = todo[k]
		board[v.y][v.x] = v.c
		td.push(v)
 	}
	io.sockets.emit('tick', {tick: ++tick, todo: td })
	todo = []
}, 1000)

this.handler = function handler(req, res){
	if(req.url.match(/board.js$/)){
		res.setHeader('Content-Type', "application/javascript")
		res.end(cache.get('js'), "utf-8")
	}
	if(req.url.match(/style.css$/)){
		res.setHeader('Content-Type', "text/css")
		res.end(cache.get('css'), "utf-8")
	}
	if(req.url.match(/load$/)){
		cells = []
		for(y=0;y<32;++y){
			for(x=0;x<32;++x){
				if(board[y][x]) cells.push({x:x,y:y,c:board[y][x]})
			}
		}
		res.setHeader('Content-Type', "application/json")
		res.setHeader('X-JSON', JSON.stringify(cells))
		res.end(null, "utf-8")
		return
	}
	// blabl
	fs.readFile(path.resolve(__dirname, "index.html"), function(err, data){
		if(err) throw(err)
		res.setHeader('Content-Type', "text/html")
		res.end(data)
	})
	return
	res.end(cache.get('html'), "utf-8")
}
this.set_io = function(_io){
 	io = _io
	io.sockets.on('connection', function(socket){
		socket.set('id', uuid.v4())
		socket.on('act', function(data){
			socket.get('id', function(err, id){
				todo[id] = data
			})
		})
	})
}
